{"version":3,"sources":["components/Header/Header.tsx","context/AppReducer.tsx","context/GlobalState.tsx","components/Balance/Balance.tsx","components/IncomeExpenses/IncomeExpenses.style.ts","components/IncomeExpenses/IncomeExpenses.tsx","components/TransactionList/TransactionList.style.ts","components/Transaction/Transaction.style.ts","components/Transaction/Transaction.tsx","components/TransactionList/TransactionList.tsx","components/AddTransaction/AddTransaction.style.ts","components/AddTransaction/AddTransaction.tsx","App.style.ts","App.tsx","index.tsx"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncExpContainer","styled","div","IncomeExpenses","amounts","income","expense","className","List","ul","Li","li","Transaction","sign","text","Math","abs","onClick","TransactionList","key","Form","form","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3371bc2a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return <h1>Expense Tracker</h1>;\r\n};\r\n\r\nexport default Header;\r\n","export default (state: any, action: any) => {\r\n  switch (action.type) {\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction: Transaction) => transaction.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\ntype ContextType = {\r\n  transactions: Array<Transaction>;\r\n  deleteTransaction?: (id: number) => void;\r\n  addTransaction?: (transaction: Transaction) => void;\r\n};\r\n\r\nconst initialState = {\r\n  transactions: [],\r\n};\r\n\r\nexport const GlobalContext = createContext<ContextType>(initialState);\r\n\r\nexport const GlobalProvider: React.FC<{}> = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  function deleteTransaction(id: number) {\r\n    dispatch({\r\n      type: \"DELETE_TRANSACTION\",\r\n      payload: id,\r\n    });\r\n  }\r\n\r\n  function addTransaction(transaction: Transaction) {\r\n    dispatch({\r\n      type: \"ADD_TRANSACTION\",\r\n      payload: transaction,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\n\r\nconst Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n  return (\r\n    <>\r\n      <h4>Your Balance</h4>\r\n      <h1>${total}</h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n","import styled from \"styled-components\";\r\n\r\nexport const IncExpContainer = styled.div`\r\n  background-color: #fff;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 20px 0;\r\n\r\n  & > div {\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n\r\n  & > div:first-of-type {\r\n    border-right: 1px solid #dedede;\r\n  }\r\n\r\n  .money {\r\n    font-size: 20px;\r\n    letter-spacing: 1px;\r\n    margin: 5px 0;\r\n  }\r\n\r\n  .money.plus {\r\n    color: #2ecc71;\r\n  }\r\n\r\n  .money.minus {\r\n    color: #c0392b;\r\n  }\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport { IncExpContainer } from \"./IncomeExpenses.style\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\n\r\nconst IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n  const income = amounts\r\n    .filter((item) => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n  const expense = (\r\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  ).toFixed(2);\r\n\r\n  return (\r\n    <IncExpContainer>\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className=\"money plus\">{income}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className=\"money minus\">{expense}</p>\r\n      </div>\r\n    </IncExpContainer>\r\n  );\r\n};\r\n\r\nexport default IncomeExpenses;\r\n","import styled from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n  list-style-type: none;\r\n  padding: 0;\r\n  margin-bottom: 40px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Li = styled.li`\r\n  background-color: #fff;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  color: #333;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  position: relative;\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n  &.minus {\r\n    border-right: 5px solid #c0392b;\r\n  }\r\n  &.plus {\r\n    border-right: 5px solid #2ecc71;\r\n  }\r\n  &:hover .delete-btn {\r\n    opacity: 1;\r\n  }\r\n  & > .delete-btn {\r\n    cursor: pointer;\r\n    background-color: #e74c3c;\r\n    border: 0;\r\n    color: #fff;\r\n    font-size: 20px;\r\n    line-height: 20px;\r\n    padding: 2px 5px;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    transform: translate(-100%, -50%);\r\n    opacity: 0;\r\n    transition: opacity 0.3s ease;\r\n    &:hover {\r\n      opacity: 1;\r\n    }\r\n    &:focus {\r\n      outline: 0;\r\n    }\r\n  }\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport { Li } from \"./Transaction.style\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\n\r\ntype Props = {\r\n  transaction: Transaction;\r\n};\r\n\r\nconst Transaction: React.FC<Props> = ({ transaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\r\n\r\n  return (\r\n    <Li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\r\n      {transaction.text}\r\n      <span>\r\n        {sign}${Math.abs(transaction.amount)}\r\n      </span>\r\n      <button\r\n        onClick={() => deleteTransaction!(transaction.id)}\r\n        className=\"delete-btn\"\r\n      >\r\n        x\r\n      </button>\r\n    </Li>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","import React, { useContext } from \"react\";\r\nimport { List } from \"./TransactionList.style\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nimport Transaction from \"../Transaction/Transaction\";\r\n\r\nconst TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <List>\r\n        {transactions.map((transaction) => (\r\n          <Transaction key={transaction.id} transaction={transaction} />\r\n        ))}\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Form = styled.form`\r\n  & > div {\r\n    & label {\r\n      display: inline-block;\r\n      margin: 10px 0;\r\n    }\r\n    & input[type=\"text\"],\r\n    input[type=\"number\"] {\r\n      border: 1px solid #dedede;\r\n      border-radius: 2px;\r\n      display: block;\r\n      font-size: 16px;\r\n      padding: 10px;\r\n      width: 100%;\r\n    }\r\n  }\r\n  & > button {\r\n    cursor: pointer;\r\n    background-color: #9c88ff;\r\n    box-shadow: var(--box-shadow);\r\n    color: #fff;\r\n    border: 0;\r\n    display: block;\r\n    font-size: 16px;\r\n    margin: 10px 0 30px;\r\n    padding: 10px;\r\n    width: 100%;\r\n    &:focus {\r\n      outline: 0;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Form } from \"./AddTransaction.style\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\n\r\nconst AddTransaction = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [amount, setAmount] = useState<number | string>(0);\r\n\r\n  const { addTransaction } = useContext(GlobalContext);\r\n\r\n  const onSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 10000000),\r\n      text,\r\n      amount: +amount,\r\n    };\r\n    addTransaction!(newTransaction);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label htmlFor=\"text\">Text</label>\r\n        <input\r\n          type=\"text\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          placeholder=\"Enter text...\"\r\n        />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label htmlFor=\"amount\">\r\n          Amount <br />\r\n          (negative - expense, positive - income)\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n          placeholder=\"Enter amount...\"\r\n        />\r\n      </div>\r\n      <button className=\"btn\">Add transaction</button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddTransaction;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    * {\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  background-color: #f7f7f7;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 100vh;\r\n  margin: 0;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\nh1 {\r\n  letter-spacing: 1px;\r\n  margin: 0;\r\n}\r\n\r\nh3 {\r\n  border-bottom: 1px solid #bbb;\r\n  padding-bottom: 10px;\r\n  margin: 40px 0 10px;\r\n}\r\n\r\nh4 {\r\n  margin: 0;\r\n  text-transform: uppercase;\r\n}\r\n.container {\r\n  margin: 30px auto;\r\n  width: 350px;\r\n}\r\n`;\r\n","import React from \"react\";\nimport Header from \"./components/Header/Header\";\nimport Balance from \"./components/Balance/Balance\";\nimport IncomeExpenses from \"./components/IncomeExpenses/IncomeExpenses\";\nimport TransactionList from \"./components/TransactionList/TransactionList\";\nimport AddTransaction from \"./components/AddTransaction/AddTransaction\";\nimport { GlobalStyle } from \"./App.style\";\n\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nconst App = () => {\n  return (\n    <GlobalProvider>\n      <GlobalStyle />\n      <div>\n        <Header />\n        <div className=\"container\">\n          <Balance />\n          <IncomeExpenses />\n          <TransactionList />\n          <AddTransaction />\n        </div>\n      </div>\n    </GlobalProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}